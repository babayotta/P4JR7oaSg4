version: '3.4'

services:

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:latest
    networks:
      - main
    ports:
    - "5672:5672"
    restart: on-failure

  redis:
    container_name: redis
    hostname: redis
    image: redis
    networks:
      - main
    ports:
    - "6379:6379"
    volumes:
    - redis:/data
    restart: on-failure

  postgres:
    container_name: postgres
    hostname: postgres
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    networks:
      - main
    ports:
    - "5432:5432"
    restart: on-failure
    volumes:
    - postgres-data:/var/lib/postgresql/data

  django:
    build: .
    command: sh -c "./wait-for-it.sh -t 15 postgres:5432 && ./wait-for-it.sh -t 15 rabbitmq:5672 && ./manage.py migrate && ./manage.py runserver 0.0.0.0:8000"
    container_name: django
    depends_on:
      - postgres
      - rabbitmq
    ports:
    - "8000:8000"
    volumes:
    - images:/usr/src/test_task/images
    hostname: django
    image: test_task_django_image
    networks:
      - main
    restart: on-failure

  celery:
    image: test_task_django_image
    command: sh -c "./wait-for-it.sh -t 15 rabbitmq:5672 && ./wait-for-it.sh -t 15 redis:6379 && ./wait-for-it.sh -t 15 django:8000 -- celery -A test_task worker -l info"
    container_name: celery
    depends_on:
      - django
      - rabbitmq
      - redis
    volumes:
      - images:/usr/src/test_task/images
    hostname: celery
    networks:
      - main
    restart: on-failure

networks:
  main:

volumes:
  postgres-data:
  redis:
  images:
